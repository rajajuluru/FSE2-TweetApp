package com.tweet.controller;

import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.mongodb.core.MongoTemplate;
import org.springframework.util.SystemPropertyUtils;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.tweet.helperClass.Login;
import com.tweet.helperClass.RegisterHelperClass;

@RestController
@RequestMapping(value = "/api/v1.0/tweets")
public class HomeController {

	@Autowired
	MongoTemplate mongoTemplate;

	@PostMapping(value = "/register")
	public RegisterHelperClass Register(@RequestBody RegisterHelperClass registerHelperClass) {
		System.out.println(registerHelperClass.toString());
		RegisterHelperClass save = mongoTemplate.save(registerHelperClass, "RegistrationDetails");
		return registerHelperClass;
	}

	@PostMapping(value = "/login")
	public RegisterHelperClass Register(@RequestBody Login login) {
		System.out.println(login.toString());
		RegisterHelperClass findById = mongoTemplate.findById(login.getEmail(), RegisterHelperClass.class);
	Optional<RegisterHelperClass> of = Optional.ofNullable(findById);
	System.out.println(of.isPresent()+"is present");
		System.out.println();
		return findById;
	}
	
	@PostMapping(value = "/all")
	public void getAllTweets() {

		Query query= new Query();
		query.addCriteria(Criteria.where("id").is(501));


		mt.findAndModify(query, update, Book.class);
		System.out.println("Data Modified");
	
	}

}
